"use strict";(()=>{var e={};e.id=830,e.ids=[830],e.modules={818:e=>{e.exports=require("dotenv")},5772:e=>{e.exports=require("llama-ocr")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9021:e=>{e.exports=require("fs")},3873:e=>{e.exports=require("path")},6762:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},1214:(e,r,t)=>{t.r(r),t.d(r,{config:()=>g,default:()=>m,routeModule:()=>P});var o={};t.r(o),t.d(o,{config:()=>f,default:()=>p});var a=t(9947),i=t(2706),s=t(6762);let n=require("fs/promises");var l=t.n(n),u=t(3873),c=t.n(u),d=t(512);let f={api:{bodyParser:{sizeLimit:"10mb"}}};async function p(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});let{imageUrl:t}=e.body;if(!t)return r.status(400).json({error:"imageUrl is required"});if(!t.startsWith("data:image/"))return r.status(400).json({error:"Invalid image format"});try{let e=c().join(process.cwd(),"uploads");await l().mkdir(e,{recursive:!0}),console.log("Uploads directory created at:",e);let o=c().join(e,`temp-${Date.now()}.png`),a=t.replace(/^data:image\/\w+;base64,/,"");await l().writeFile(o,Buffer.from(a,"base64")),console.log("Temporary image saved at:",o);let i=await (0,d.runOCRWithRetry)(o);console.log("OCR result saved as:",i);try{await l().unlink(o),console.log("Temporary image deleted:",o)}catch(e){console.error("Error deleting temporary image:",e)}r.status(200).json({jsonFilename:i})}catch(e){console.error("Error processing image:",e),r.status(500).json({error:"Failed to process the image",details:e.message})}}let m=(0,s.M)(o,"default"),g=(0,s.M)(o,"config"),P=new a.PagesAPIRouteModule({definition:{kind:i.A.PAGES_API,page:"/api/process",pathname:"/api/process",bundlePath:"",filename:""},userland:o})},512:(e,r,t)=>{t(818).config();let{ocr:o}=t(5772),a=t(9021).promises,i=t(3873);async function s(e,r=3){let t=process.env.TOGETHER_API_KEY;if(!t)throw console.error("API key is missing. Check your .env file."),Error("API key is missing.");let n=i.join(process.cwd(),"public","ocr_results");await a.mkdir(n,{recursive:!0});for(let s=0;s<r;s++)try{console.log(`Starting OCR attempt ${s+1} for image: ${e}`);let r=await o({filePath:e,apiKey:t});console.log("Raw OCR Output:",r);let l=function(e){let r=e.split("\n"),t=[],o=[],a=!1;return r.forEach(e=>{if(!a){if(!e.match(/\|/))return;a=!0}if(e.match(/^\s*-+\s*\|\s*-+/))return;let r=e.split("|").map(e=>e.trim());if(0===o.length)o=r;else if(r.length===o.length){let e={};o.forEach((t,o)=>{e[t]=r[o]}),t.push(e)}}),t}(r);if(console.log("Parsed Data:",l),0===l.length)throw console.log("No table data found."),Error("No table data found.");let u=i.basename(e,i.extname(e))+".json",c=i.join(n,u);return await a.writeFile(c,JSON.stringify(l,null,2)),console.log(`OCR results saved to ${c}`),u}catch(e){if(console.error(`OCR attempt ${s+1} failed:`,e),s===r-1)throw console.error("All OCR attempts failed."),e}}e.exports={runOCRWithRetry:s}},2706:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9947:(e,r,t)=>{e.exports=t(5600)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=1214);module.exports=t})();